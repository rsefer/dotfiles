#!/usr/bin/env python3
#
# Time logging

import time, sys, os, csv
from datetime import datetime

hours_file = os.getenv('HOME') + "/Google Drive/Work/hours.csv"
delimiter = ','

def summarize(clientID = None):
	with open(hours_file, 'rt') as file:
		reader = csv.reader(file, delimiter = delimiter)
		clients = {}
		raw_table = ''
		line = 0
		lastDate = None
		for row in reader:
			if len(row) == 0:
				continue
			if clientID != None and row[0] != clientID:
				continue
			workingDate = row[4]
			if line > 0:
				if row[0] not in clients:
					clients[row[0]] = {
						'name' : row[1],
						'minutes' : 0
					}
				clients[row[0]]['minutes'] += int(row[2])

				workingDate = datetime.strftime(datetime.strptime(row[4], '%Y-%m-%d'), '%Y-%m-%d %a')
				clients[row[0]]['last_tracked'] = workingDate
				if lastDate == workingDate:
					workingDate = '              '
				else:
					raw_table += "\t\t\t\t\t--------------\n"
					lastDate = workingDate

			raw_table += row[1] + "\t" + row[2] + "\t" + row[3] + "\t" + workingDate + "\n"
			line += 1

		print()
		print('=======')
		print('SUMMARY')
		print('=======')
		print("id\tname\t\t\ttime\t\tlast tracked")
		print("--\t----\t\t\t----\t\t------------")
		for k, client in clients.items():
			hours = round(client['minutes'] / 60, 2)
			workingLastTrackedRelative = (datetime.now() - datetime.strptime(client['last_tracked'], '%Y-%m-%d %a')).days
			if workingLastTrackedRelative == 0:
				workingLastTrackedRelative = 'today'
			elif workingLastTrackedRelative == 1:
				workingLastTrackedRelative = '1 day ago'
			else:
				workingLastTrackedRelative = str(workingLastTrackedRelative) + ' days ago'
			print(k + "\t" + client['name'] + "\t\t" + '{:.2f}'.format(hours) + ' hours' + "\t" + workingLastTrackedRelative)
		print()

		if len(sys.argv) >= 3 and (sys.argv[2] == 'raw' or sys.argv[2].isnumeric()):
			print('====')
			print('DATA')
			print('====')
			print(raw_table)

def addRow(clientID, clientName, minutes):
	with open(hours_file, 'a') as file:
		file.write("\n")
		file.write(clientID + delimiter + clientName + delimiter + minutes + delimiter + time.strftime('%H:%M:%S') + delimiter + time.strftime('%Y-%m-%d'))

def clearClient(clientID):
	keep_lines = list()
	remove_lines_count = 0
	summarize(clientID)
	with open(hours_file, 'rt') as file:
		reader = csv.reader(file, delimiter = delimiter)
		for row in reader:
			if len(row) == 0:
				continue
			if row[0] == clientID:
				if remove_lines_count == 0:
					print()
					print('Clearing client #' + clientID + ' - ' + row[1])
					print()
				print(row[4] + ' ' + row[3] + ' ' + row[2] + ' minutes')
				remove_lines_count += 1
			else:
				keep_lines.append(row)

		if remove_lines_count == 0:
			print('Client #' + clientID + ' not found')
			sys.exit(1)

	with open(hours_file, 'w') as file:
		writer = csv.writer(file)
		writer.writerows(keep_lines)

if len(sys.argv) < 2:
	summarize()
else:
	if sys.argv[1] == 'sum' or sys.argv[1] == 's':
		if len(sys.argv) >= 3 and sys.argv[2].isnumeric():
			summarize(sys.argv[2])
		else:
			summarize()
	elif (sys.argv[1] == 'add' or sys.argv[1] == 'a') and len(sys.argv) >= 5:
		addRow(sys.argv[2], sys.argv[3], sys.argv[4])
	elif (sys.argv[1] == 'clear' or sys.argv[1] == 'c') and len(sys.argv) >= 3:
		clearClient(sys.argv[2])
	else:
		print('Wrong arguments')
		sys.exit(1)
