#!/usr/bin/env python
#
# Time logging

import time, sys, os, csv
import re
from csv import writer
from datetime import datetime

hours_file = os.getenv('HOME') + "/Google Drive/Work/hours.csv"
# if Google Drive is "streaming" use os.getenv('HOME') + "/Google Drive/My Drive/Work/hours.csv"
hours_file_with_spaces = hours_file.replace(' ', '\ ')
delimiter = ','

def summarize(clientID = None):
	with open(hours_file, 'rt') as file:
		reader = csv.reader(file, delimiter = delimiter)
		clients = {}
		raw_table = [
			['id', 'name', 'minutes', 'timestamp', 'date'],
			['--', '----', '-------', '---------', '--------------']
		]
		line = 0
		lastClientID = None
		lastDate = None
		for row in reader:
			if len(row) == 0:
				continue
			if clientID != None and row[0] != clientID:
				continue
			workingClientID = row[0]
			workingClientName = row[1]
			workingDate = row[4]
			if line > 0:
				if row[0] not in clients:
					clients[row[0]] = {
						'name' : row[1],
						'minutes' : 0
					}
				clients[row[0]]['minutes'] += int(row[2])

				if lastClientID == workingClientID:
					workingClientID = ''
					workingClientName = '|'
				else:
					lastClientID = workingClientID

				workingDate = datetime.strftime(datetime.strptime(row[4], '%Y-%m-%d'), '%Y-%m-%d %a')

				clients[row[0]]['last_tracked'] = workingDate
				if lastDate == workingDate:
					workingDate = ''
				else:
					if line > 1:
						raw_table.append(['', '', '', '', '--------------'])
					lastDate = workingDate
				raw_table.append([workingClientID, workingClientName, row[2], row[3], workingDate])
			line += 1

		print()
		print('=======')
		print('SUMMARY')
		print('=======')
		summary_table = [
			['id', 'name', 'time', 'last tracked'],
			['--', '----', '----', '------------']
		]
		combined_hours = 0
		for k, client in clients.items():
			hours = round(client['minutes'] / 60, 2)
			workingLastTrackedRelative = (datetime.now() - datetime.strptime(client['last_tracked'], '%Y-%m-%d %a')).days
			if workingLastTrackedRelative == 0:
				workingLastTrackedRelative = 'today'
			elif workingLastTrackedRelative == 1:
				workingLastTrackedRelative = '1 day ago'
			else:
				workingLastTrackedRelative = str(workingLastTrackedRelative) + ' days ago'
			summary_table.append([k, client['name'], '{:.2f}'.format(hours) + ' hours', workingLastTrackedRelative])
			combined_hours += hours
		print()
		print('Total hours: ' + '{:.2f}'.format(combined_hours))
		print()
		for row in summary_table:
			print('{:5} {: >25} {: >15} {: >14}'.format(*row))
		print()

		if len(sys.argv) >= 3 and (sys.argv[2] == 'raw' or sys.argv[2].isnumeric()):
			print('====')
			print('DATA')
			print('====')
			print()
			for row in raw_table:
				print('{:5} {: >25} {: >15} {: >14} {: >16}'.format(*row))
			print()

def clientTime(clientID = None):
	if clientID != None:
		with open(hours_file, 'rt') as file:
			reader = csv.reader(file, delimiter = delimiter)
			minutes = 0
			for row in reader:
				# print(row)
				if len(row) == 0:
					continue
				if row[0] != clientID:
					continue
				minutes += int(row[2])
			print(minutes)

def addRow(clientID, clientName, minutes):
	with open(hours_file, 'a+', newline='') as file:
		csv_writer = writer(file)
		csv_writer.writerow([clientID, clientName, re.sub("[^-\d]", "", minutes), time.strftime('%H:%M:%S'), time.strftime('%Y-%m-%d')])
		print('Added ' + minutes + ' minutes to ' + clientName)

def clearClient(clientID):
	keep_lines = list()
	remove_lines_count = 0
	summarize(clientID)
	with open(hours_file, 'rt') as file:
		reader = csv.reader(file, delimiter = delimiter)
		for row in reader:
			if len(row) == 0:
				continue
			if row[0] == clientID:
				if remove_lines_count == 0:
					print()
					print('Clearing client #' + clientID + ' - ' + row[1])
					print()
				print(row[4] + ' ' + row[3] + ' ' + row[2] + ' minutes')
				remove_lines_count += 1
			else:
				keep_lines.append(row)

		if remove_lines_count == 0:
			print('Client #' + clientID + ' not found')
			sys.exit(1)

	with open(hours_file, 'w') as file:
		writer = csv.writer(file)
		writer.writerows(keep_lines)

if len(sys.argv) < 2:
	summarize()
else:
	if sys.argv[1] == 'open':
		os.system('open -e ' + hours_file_with_spaces)
	elif sys.argv[1] == 'view':
		os.system('cat ' + hours_file_with_spaces)
	elif sys.argv[1] == 'sum' or sys.argv[1] == 's':
		if len(sys.argv) >= 3 and sys.argv[2].isnumeric():
			summarize(sys.argv[2])
		else:
			summarize()
	elif sys.argv[1] == 'ct' and len(sys.argv) >= 3:
		clientTime(sys.argv[2])
	elif (sys.argv[1] == 'add' or sys.argv[1] == 'a') and len(sys.argv) >= 5:
		addRow(sys.argv[2], sys.argv[3], sys.argv[4])
	elif (sys.argv[1] == 'clear' or sys.argv[1] == 'c') and len(sys.argv) >= 3:
		clearClient(sys.argv[2])
	else:
		print('Wrong arguments')
		sys.exit(1)
