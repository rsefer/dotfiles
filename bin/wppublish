#!/bin/sh
#
# Publish wordpress theme/plugin folder

source $DOTFILES_ROOT/setup/functions.sh

set -e

promptFlushCache () {
	# $1 = connection type
	# $2 = skip prompt
	if [ ! -z "$FLUSHADDRESS" ]; then
		if [ -z "$2" ]; then
			readyn "Flush the site cache? (y/n)"
		fi
		if [[ $2 == "y" || $REPLY =~ ^[Yy]$ ]]; then
			if [[ ! -z "$FLUSHCOMMANDS" && $FLUSHCOMMANDS != '' && $1 != 'rsync' && $FLUSHADDRESS != *"wpengine"* ]]; then
				wpflywheelflushcache "$FLUSHADDRESS"
			else
				ssh $FLUSHADDRESS "$FLUSHCOMMANDS"
			fi
		fi
	fi
}

plus "STARTING wppublish"

FOLDERNAME=$(basename "$PWD")
WPPUBLISHFILE=$PWD/_config/wppublish.json
LOCALUPLOADDIR=~/Downloads

if test -f "$WPPUBLISHFILE"; then
	PUBLISHMETHOD=$(cat $WPPUBLISHFILE | jq -r '.method')
	HOST=$(cat $WPPUBLISHFILE | jq -r '.host')
	PORT=$(cat $WPPUBLISHFILE | jq -r '.port')
	USERNAME=$(cat $WPPUBLISHFILE | jq -r '.username')
	PASSWORD=$(cat $WPPUBLISHFILE | jq -r '.password')
	REMOTETHEMESPATH=$(cat $WPPUBLISHFILE | jq -r '.remotethemespath')
	FLUSHADDRESS=$(cat $WPPUBLISHFILE | jq -r '.flushaddress')
	FLUSHCOMMANDS=$(cat $WPPUBLISHFILE | jq -r '.flushcommands')
else
	fail "ABORTING: _config/wppublish.json not found"
	readyn "Create _config/wppublish.json file (y/n)?"
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		if [ ! -d "_config" ]; then
			mkdir _config
		fi
		jq -n '{ "url": "", "method": "git-ftp", "host": "", "port": "22", "username": "", "password": "", "remotethemespath": "/path/to/wp-content/themes", "flushaddress": "" }' > _config/wppublish.json
		success "_config/wppublish.json created. Fill out that file and run wpppublish again"
		exit 0
	else
		exit 1
	fi

fi

info "Script will update: $HOST:$REMOTETHEMESPATH/$FOLDERNAME"

SHOULDFLUSH=true

if [ $PUBLISHMETHOD = "rsync" ]; then

	readyn "What would you like continue? [y]es or [n]o"
	if [[ ! $REPLY =~ ^[Yy]$ ]]; then
		minus "ABORTING"
		promptFlushCache "$PUBLISHMETHOD"
		exit 1
	fi

	info "Generating git archive and unzipping"
	git archive --worktree-attributes -o $LOCALUPLOADDIR/$FOLDERNAME.zip HEAD
	cd $LOCALUPLOADDIR && unzip $FOLDERNAME.zip -d $FOLDERNAME &> /dev/null && rm $FOLDERNAME.zip
	info "rsyncing to $HOST:$REMOTETHEMESPATH"
	rsync --verbose --archive --compress --delete --partial --progress $FOLDERNAME $USERNAME@$HOST:$REMOTETHEMESPATH
	rm -r $FOLDERNAME

else

	GITFTPACTION=push

	readyn "What would you like to do? [p]ush and flush cache, [o]nly push, no flush, [i]nit, [f]lush cache, or [e]xit?"
	if [[ ! $REPLY =~ ^[PpOoIiFf]$ ]]; then
		minus "ABORTING"
		exit 1
	else
		if [[ $REPLY =~ ^[Ii]$ ]]; then
			GITFTPACTION=init
		elif [[ $REPLY =~ ^[PpOo]$ ]]; then
			GITFTPACTION=push
			if [[ $REPLY =~ ^[Oo]$ ]]; then
				SHOULDFLUSH=false
			fi
		elif [[ $REPLY =~ ^[Ff]$ ]]; then
			promptFlushCache "$PUBLISHMETHOD" y
			exit 1
		fi
	fi

	if git rev-parse --git-dir > /dev/null 2>&1; then
		info "Connecting as $USERNAME to sftp://$HOST:$PORT$REMOTETHEMESPATH/$FOLDERNAME ..."
		git ftp $GITFTPACTION -u $USERNAME -p $PASSWORD sftp://$HOST:$PORT$REMOTETHEMESPATH/$FOLDERNAME
	fi

fi

if [[ $SHOULDFLUSH != 'false' ]]; then
	promptFlushCache "$PUBLISHMETHOD" y
fi

URL=$(cat $WPPUBLISHFILE | jq -r '.url')

if [ ! -z "$URL" ]; then
	info "Opening $URL..."
	sleep 2
	open $URL
fi

success "FINISHED wppublish"

exit 0
